#####################################################################
#   Macros
#####################################################################
[bed_mesh]
#STATUS_LEVELING
speed: 200
horizontal_move_z: 6
##--------------------------------------------------------------------
##	Uncomment for 350mm build
mesh_min: 40, 40    #40, 40
mesh_max: 310,310

#mesh_min: 30, 16    #40, 40
#mesh_max: 330,326
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 7,7  #5,5
algorithm: bicubic
#relative_reference_index: 24  #13 puvodne 24
#STATUS_READY

[gcode_macro QGL]
gcode:
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    G90
    G0 X175 Y175 Z30 F10800
    STATUS_READY
    #--------------------------------------------------------------------

[homing_override]
axes: xyz
gcode:
  {% set tilted = printer.quad_gantry_level.applied|default("false")|lower %}

  {% if tilted == "false" %}
    SET_KINEMATIC_POSITION Z=0
      G91
      G1 Z5 F1200
  {% endif %}

  {% set home_all = 'X' not in params and 'Y' not in params and 'XY' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params or 'XY' in params %}
    STATUS_HOMING
    _HOME_X
  {% endif %}

  {% if home_all or 'Y' in params or 'XY' in params %}
    STATUS_HOMING
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    STATUS_HOMING
    G90
    G1 X175 Y175 F6600 ## toto je pro 350 verzi, přepište si zde vaši velikost, jinak to nebude dělat home uprostřed
    G28 Z
    G1 Z10
    STATUS_READY
  {% endif %}
      
[gcode_macro PRINT_START]
gcode:       
    # Parameters
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Předchozí dva řádky nám vytvořily proměnné BED_TEMP a EXTRUDER_TEMP, a doplnily je hodnotami ze Sliceru
    # V případě že slicer hodnoty nepředá, nastaví se defaultně 190 pro hotend, a 60 pro bed
    # enable lights
    LIGHTS_10
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    # <insert routines>
    STATUS_HEATING
    M190 S{BED_TEMP}                                                              ; wait for bed temp
    M109 S150 ; preheat nozzle but not high enough to melt everything and ooze
    STATUS_HOMING
    G28 # Home if needed
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}  ; wait for chamber temp
    G90 # Use absolute coordinates
  # SET_GCODE_OFFSET Z=0.0 # Reset the G-Code Z offset from previous value
    STATUS_CLEANING
    CLEAN_NOZZLE # clean nozzle before home to ensure clean home
    G91
    G1 Y-20 F6000
    G90
    G28 Z # Home Z only after clean nozzle
    BED_MESH_CLEAR # Clear the current bed mesh
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL # level the gantry, requires probe
    #home
    STATUS_HOMING
    G28 Z # Home after QGL
    #M109 S170 ; preheat nozzle but not high enough to melt everything and ooze
    #moved nozzle temperatre from here to before the g92  
             
    #G28 # Rehome so absolute coordinates do ok  
    #TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER}   ; wait for chamber temp
    # <nozzle clean>
    #G28                                                                    ; final z homing with hot nozzlE
    #G32                                                                     ; home all axes
    #G1 Z20 F3000                                                            ; move nozzle away from bed
    #BED_MESH_PROFILE LOAD=Probe1
    #might add retraction here to ensure nozzle is clean too.  G1 E-5.0 F100 
    STATUS_MESHING
    #ADAPTIVE_BED_MESH
    #DOCK_PROBE_UNLOCK
    BED_MESH_CALIBRATE
    #STATUS_CLEANING
    #M117 After MeshCalibrate
    #STATUS_CLEANING
    #CLEAN_NOZZLE # clean again to make sure it is clean before z calibrate
    #M117 Clean B4 CalibrateZ
    #STATUS_CALIBRATING_Z
    #ATTACH_PROBE_LOCK
    #COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    #CALIBRATE_Z  # calibrate z, requires probe, does not dock when finished REQUIRES CLICKY PROBE
    #M117 After CalibrateZ
    #BED_MESH_CALIBRATE METHOD=AUTOMATIC # calibrate the bed mesh, save as default
    #BED_MESH_PROFILE LOAD=default # loads default bed mesh
    #G1 X125 Y350 Z5 F10000         ; Move to purge bucket location 
    STATUS_HEATING
    #STATUS_PRINTING #status_printing
    G92 E0 ; set extruder to 0
    #M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.7 F900
    M109 S{EXTRUDER_TEMP}          ; wait for hotend temp
    STATUS_PRINTING #status_printing
    #ADAPTIVE_PURGE
    G1 Z0.3 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X150 E25 F2000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F500
    G1 X-60 E9 F2000    ; Print second part of the line.
    G1 E-0.1 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    #SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1
    #    M109 S{HOTEND}          ; wait for hotend temp     
    #G1 E0.8 F200           ; Extrude a small amount of filament to get nozzle ready to print
    #G1 E-0.8 F100         ; Small Retraction
    #STATUS_CLEANING    
    #CLEAN_NOZZLE
    #G0 Z10 F3600                  ; Move away from nozzle brush
    #G0 X120 Y120 Z0.8 F10000
    #G92 E0 ; set extruder to 0
    
    M117 Printing...
    M117
    #SET_FILAMENT_SENSOR SENSOR=runout_sensor ENABLE=1
    #PURGE_LINE                                     
#This would now be run like `PRINT_START BED=110 HOTEND=240 CHAMBER=50`.
#Chamber defaults to 0 if not specified - see parameters section.

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M221 S100 ; set speed back to if speedup print 100%
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 100, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F3000                ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2}
    #G91
    #G1 Z50 F900
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    ##STATUS_CLEANING
    ##G1 X75 Y350 Z10 F3600        ; Move to purge bucket location 
    #CLEAN_NOZZLE
    #BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    # disable lights
    LIGHTS_OFF
    STATUS_READY

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-100 F1000  # vysune filamen
    PAUSE
    STATUS_CLEANING
    #prejede k purge bucket
    #G90
    #G1 X75 F10000
    #G1 Y350
    #G1 Z0
    #G1 E100 F1000
    #G1 E-0.8 F2700
    CLEAN_NOZZLE_PURGE
    STATUS_PRINTING
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro Presnost_sondy]
gcode:
    STATUS_CALIBRATING_Z
    M117 Probe accuracy
    PROBE_ACCURACY
    M117
    STATUS_READY

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000
        G1 X0 Y0     F27000
        G1 X350 Y350 F27000

        G1 X0 Y350 F36000

        G1 X350 Y0 F27000
        G1 X0 Y350 F27000
        G1 X350 Y0 F27000
        G1 X0 Y350 F27000

        G1 X0 Y0 F36000
        G1 X350 Y0 F36000
        G1 X350 Y350 F36000
        G1 X0 Y350 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro BACKUP_CFG]
 description: Backs up config directory GitHub
 gcode:
     RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro ZUP]
#   My Addition G-Code
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1   ; move closer during print to adjust squish
    
[gcode_macro ZDOWN]
#   My Addition G-Code
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    #G1 Z80 F100000         
    G1 X250 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E3  F300            # extrude slowly to soften tip of filament
    G1 E-30 F100000        # quickly yank filament back clear of hotend
    G1 E-80 F1800          # ensure filament is clear of extruder gears
    M82                    # set extruder to absolute extrusion

[gcode_macro LOAD_FILAMENT]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    #STATUS_PRINTING
    #G1 Z80 F100000
    G1 X250 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E35 F300            # extrude filament through into hotend
    G1 E15 F240            # slowly extrude through hotend to partially purge previous filament
    G1 E-15.0 F100000      # retract filament
    M82                    # set extruder to absolute extrusion

[gcode_macro PURGE_LINE]
gcode:

  G0 X340 Y50 F3000              ; Go to side
  G0 Z0.25                      ;
  G1 E15 F200                    ; purge blob
  G92 E0                        ; zero the extruded length
  G1 Y330 E7.5 F800              ; Extrude purge line
#  G1 Y300 E-.1 F800              ; Retract while wiping on purged line
  G1 Z4 

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SWIPENOZZLE]
gcode:
	;G28
	SAVE_GCODE_STATE NAME=SWIPENOZZLE
	G90																; absolute positioning
	G0 X85 Y350 Z15 F1500												; move nozzle into positioning
	G0 Z8 F1500														; lower nozzle into brush
	G0 X120 F5000													; swipe nozzle once to right
	G0 X175 Z25 F1500	

#Lighting Control
[gcode_macro lights_on]
gcode:
    SET_PIN PIN=caselight VALUE=1.0

[gcode_macro lights_off]
gcode:
    SET_PIN PIN=caselight VALUE=0

[gcode_macro lights_10]
gcode:
    SET_PIN PIN=caselight VALUE=0.1